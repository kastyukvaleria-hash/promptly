// src/pages/HomePage.jsx
import React, { useState, useEffect } from 'react'; // <-- –î–æ–±–∞–≤–∏–ª–∏ useState
import { Link } from 'react-router-dom';
import { useCourseData } from '../context/CourseContext.jsx';
import { useAuth } from '../hooks/useAuth.js';
import LivesIndicator from '../components/common/LivesIndicator.jsx';
import SectionCard from '../components/courses/SectionCard.jsx';
import HomePageSkeleton from '../components/common/HomePageSkeleton.jsx';
import styles from './HomePage.module.css';

const HomePage = () => {
  // --- –ù–ê–ß–ê–õ–û –ò–ó–ú–ï–ù–ï–ù–ò–ô ---
  // –£–±–∏—Ä–∞–µ–º isLoading, —Ç–∞–∫ –∫–∞–∫ —É –Ω–∞—Å –±—É–¥–µ—Ç —Å–≤–æ—è, –±–æ–ª–µ–µ —É–º–Ω–∞—è –ª–æ–≥–∏–∫–∞
  const { courseData, error, reloadCourseData } = useCourseData();
  const { user } = useAuth();
  
  // –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–∫–∞–∑–æ–º —Å–∫–µ–ª–µ—Ç–∞
  const [isPreparing, setIsPreparing] = useState(true);

  useEffect(() => {
    // –°–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ–±—ã –∫—Ä–∞—Å–∏–≤–æ –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
    const preparePage = async () => {
      try {
        // –ó–∞–ø—É—Å–∫–∞–µ–º –î–í–ê –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∏ –∂–¥–µ–º, –ø–æ–∫–∞ –û–ë–ê –∑–∞–≤–µ—Ä—à–∞—Ç—Å—è
        await Promise.all([
          reloadCourseData(), // 1. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
          new Promise(resolve => setTimeout(resolve, 800)) // 2. –¢–∞–π–º–µ—Ä –Ω–∞ 1 —Å–µ–∫—É–Ω–¥—É
        ]);
      } catch (err) {
        // –ï—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –æ—à–∏–±–∫–∞, –º—ã –µ–µ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∑–¥–µ—Å—å,
        // –ø–æ—Ç–æ–º—É —á—Ç–æ `useCourseData` —Å–∞–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç —ç—Ç—É –æ—à–∏–±–∫—É –≤ `error`
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–∞, –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω —ç–∫—Ä–∞–Ω –æ—à–∏–±–∫–∏.", err);
      } finally {
        // –≠—Ç–æ—Ç –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ: –∏ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ, –∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ.
        // –û–Ω —É–±–µ—Ä–µ—Ç —Å–∫–µ–ª–µ—Ç-–∑–∞–≥—Ä—É–∑—á–∏–∫.
        setIsPreparing(false);
      }
    };

    preparePage();
    // –ú—ã —Ö–æ—Ç–∏–º, —á—Ç–æ–±—ã —ç—Ç–æ –≤—ã–ø–æ–ª–Ω—è–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞—Ö–æ–¥–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É,
    // –ø–æ—ç—Ç–æ–º—É –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–∞–∫–∏–º.
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–ô ---

  // –¢–µ–ø–µ—Ä—å –≥–ª–∞–≤–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ - —ç—Ç–æ –Ω–∞—à–µ –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ `isPreparing`
  if (isPreparing) {
    return <HomePageSkeleton />;
  }

  if (error) {
    return (
      <div className={styles.container}>
        <div className={styles.message}>
          <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫—É—Ä—Å.</p>
          <button onClick={() => window.location.reload()} className="primaryButton">
            –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
          </button>
        </div>
      </div>
    );
  }

  if (!courseData || !courseData.sections || !courseData.sections.length) {
    return (
      <div className={styles.container}>
        <header className={styles.header}>
          <div className={styles.titleWrapper}>
            <h1 className={styles.title}>–ü—Ä–∏–≤–µ—Ç üëã</h1>
            <h2 className={styles.subtitle}>–ü–æ—Ä–∞ —É—á–∏—Ç—å –ø—Ä–æ–º–ø—Ç—ã!</h2>
          </div>
        </header>

        {user && user.role === 'ADMIN' && (
          <Link to="/admin" className={styles.adminButton}>
            –ü–∞–Ω–µ–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
          </Link>
        )}

        <div className={styles.message}>–ö—É—Ä—Å –ø–æ–∫–∞ –ø—É—Å—Ç. –ó–∞–≥–ª—è–Ω–∏—Ç–µ –ø–æ–∑–∂–µ!</div>
      </div>
    );
  }

  const totalLessonsInCourse = courseData.sections.reduce(
    (total, section) => total + section.chapters.reduce((sum, chapter) => sum + chapter.lectures.length, 0),
    0
  );
  const completedLessonsInCourse = Math.round((totalLessonsInCourse * courseData.totalCourseProgress) / 100);

  return (
    <div className={styles.container}>
      <header className={styles.header}>
        <div className={styles.livesWrapper}>
          <LivesIndicator />
        </div>
        <div className={styles.titleWrapper}>
          <h1 className={styles.title}>–ü—Ä–∏–≤–µ—Ç üëã</h1>
          <h2 className={styles.subtitle}>–ü–æ—Ä–∞ —É—á–∏—Ç—å –ø—Ä–æ–º–ø—Ç—ã!</h2>
        </div>
      </header>

      {user && user.role === 'ADMIN' && (
        <Link to="/admin" className={styles.adminButton}>
          –ü–∞–Ω–µ–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        </Link>
      )}

      <div className={styles.overallProgress}>
        <div className={styles.progressInfo}>
          <span className={styles.progressTitle}>–ü—Ä–æ–π—Ç–∏ {courseData.sections.length} —Ä–∞–∑–¥–µ–ª–∞</span>
          <span className={styles.progressPercentage}>{courseData.totalCourseProgress}%</span>
        </div>
        <p className={styles.progressDescription}>
          {completedLessonsInCourse} –∏–∑ {totalLessonsInCourse} —É—Ä–æ–∫–æ–≤
        </p>
        <div className={styles.progressBarContainer}>
          <div className={styles.progressBar} style={{ width: `${courseData.totalCourseProgress}%` }} />
        </div>
      </div>

      <main className={styles.sectionsList}>
        {courseData.sections.map((section, index) => (
          <SectionCard key={section.id} section={section} index={index} />
        ))}
      </main>
    </div>
  );
};

export default HomePage;