import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useAuth } from '../hooks/useAuth.js';
import { useTransition } from '../context/TransitionContext.jsx';
import styles from './LoginPage.module.css';

const LoginPage = () => {
  const [isLoginMode, setIsLoginMode] = useState(true);
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [nickname, setNickname] = useState('');
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(false);

  const auth = useAuth();
  const navigate = useNavigate();
  const { transitionToApp } = useTransition();

  // --- –í–û–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê ---
  const handleSubmit = async (e) => {
    e.preventDefault();
    setError('');
    setLoading(true);

    try {
      // 1. –°–ù–ê–ß–ê–õ–ê –ø—ã—Ç–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ª–æ–≥–∏–Ω –∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
      if (isLoginMode) {
        await auth.login(email, password);
      } else {
        await auth.register(nickname, email, password);
      }

      // 2. –ï–°–õ–ò –∫–æ–¥ –¥–æ—à–µ–ª –¥–æ —Å—é–¥–∞, –∑–Ω–∞—á–∏—Ç, –æ—à–∏–±–∫–∏ –Ω–µ –±—ã–ª–æ. –£–°–ü–ï–•!
      //    –¢–û–õ–¨–ö–û –¢–ï–ü–ï–†–¨ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–µ—Ä–µ—Ö–æ–¥–∞.
      await transitionToApp(() => {
        // –î–µ–π—Å—Ç–≤–∏–µ –≤–Ω—É—Ç—Ä–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ - —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é.
        navigate('/');
      });

    } catch (err) {
      // 3. –ï–°–õ–ò –Ω–∞ —à–∞–≥–µ 1 –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –º—ã –ø–æ–ø–∞–¥–∞–µ–º —Å—é–¥–∞.
      //    –ê–Ω–∏–º–∞—Ü–∏—è –ù–ï –ë–´–õ–ê –∑–∞–ø—É—â–µ–Ω–∞.
      if (err.response) {
        const status = err.response.status;
        if (isLoginMode) {
          if (status === 401 || status === 403) {
            setError('–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å.');
          } else {
            setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.');
          }
        } else {
          if (status === 400 || status === 409) {
            setError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.');
          } else {
            setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.');
          }
        }
      } else {
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É.');
      }
      // –í–∞–∂–Ω–æ: —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞.
      setLoading(false);
    } 
  };

  return (
    <div className={styles.container}>
      <div className={styles.contentWrapper}>
        <header className={styles.header}>
          <h1>–ü—Ä–∏–≤–µ—Ç üëã</h1>
          <h2>{isLoginMode ? '–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏ –≤ —Å–∏—Å—Ç–µ–º—É' : '–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç'}</h2>
        </header>
        <div className={styles.formContainer}>
          <h3>{isLoginMode ? '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è' : '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'}</h3>
          <form onSubmit={handleSubmit}>
            {!isLoginMode && (
              <div className={styles.inputGroup}>
                <label htmlFor="nickname">–ù–∏–∫–Ω–µ–π–º</label>
                <input type="text" id="nickname" value={nickname} onChange={(e) => setNickname(e.target.value)} placeholder="–í–∞—à –Ω–∏–∫–Ω–µ–π–º" required disabled={loading}/>
              </div>
            )}
            <div className={styles.inputGroup}>
              <label htmlFor="email">–ü–æ—á—Ç–∞</label>
              <input type="email" id="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="example@mail.com" required disabled={loading}/>
            </div>
            <div className={styles.inputGroup}>
              <label htmlFor="password">–ü–∞—Ä–æ–ª—å</label>
              <input type="password" id="password" value={password} onChange={(e) => setPassword(e.target.value)} placeholder="–ù–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤" required disabled={loading}/>
            </div>
            {error && <p className={styles.error}>{error}</p>}
            <button type="submit" className={styles.submitButton} disabled={loading}>
              {loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : (isLoginMode ? '–í–æ–π—Ç–∏' : '–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç')}
            </button>
          </form>
          <div className={styles.linksContainer}>
            {isLoginMode && (
              <Link to="/forgot-password" className={styles.toggleText}>
                –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
              </Link>
            )}
            <p className={styles.toggleText} onClick={() => !loading && setIsLoginMode(!isLoginMode)}>
              {isLoginMode ? '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è' : '–£ –º–µ–Ω—è —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç'}
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default LoginPage;